import { Model, DataTypes } from "sequelize";
import db from "../../db/db";

export interface ViewsAttributesInterface {
  userId: number;
  postId: number;
  createdByTest?: boolean;

  // below are automatically generated by the db
  id?: number;
  createdAt?: Date;
  updatedAt?: Date;
}

class View extends Model<ViewsAttributesInterface> {
  constructor(init?: Partial<View>) {
    super();
    Object.assign(this, init);
  }
}

View.init(
  {
    id: {
      type: DataTypes.INTEGER,
      allowNull: false,
      primaryKey: true,
      autoIncrement: true,
      unique: true,
    },
    userId: {
      type: DataTypes.INTEGER,
      // User id will be null if they are not signed in,
      // we still want to add a new view even if they aren't signed in
      allowNull: true,
    },
    postId: {
      type: DataTypes.INTEGER,
      allowNull: false,
    },
    createdAt: {
      type: DataTypes.DATE,
    },
    updatedAt: {
      type: DataTypes.DATE,
    },
    createdByTest: {
      type: DataTypes.BOOLEAN,
      allowNull: false,
      defaultValue: false,
    },
  },
  {
    tableName: "Views",
    freezeTableName: true, // no alter
    sequelize: db,
  }
);

export default View;
