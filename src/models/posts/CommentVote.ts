import { Model, DataTypes } from "sequelize";
import db from "../../db/db";

export interface CommentVoteAttributesInterface {
  upvote?: boolean;
  downvote?: boolean;
  userId: number;
  postId: number;
  userName: string;
  commentId: number;
  createdByTest?: boolean;

  // below are automatically generated by the db
  id?: number;
  createdAt?: Date;
  updatedAt?: Date;
}

class CommentVote extends Model<CommentVoteAttributesInterface> {
  constructor(init?: Partial<CommentVote>) {
    super();
    Object.assign(this, init);
  }
}

CommentVote.init(
  {
    id: {
      type: DataTypes.INTEGER,
      allowNull: false,
      primaryKey: true,
      autoIncrement: true,
      unique: true,
    },
    userName: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    userId: {
      type: DataTypes.INTEGER,
      allowNull: false,
    },
    commentId: {
      type: DataTypes.INTEGER,
      allowNull: false,
    },
    postId: {
      type: DataTypes.INTEGER,
      allowNull: false,
    },
    upvote: {
      type: DataTypes.BOOLEAN,
      allowNull: true,
      defaultValue: null,
    },
    downvote: {
      type: DataTypes.BOOLEAN,
      allowNull: true,
      defaultValue: null,
    },
    createdAt: {
      type: DataTypes.DATE,
    },
    updatedAt: {
      type: DataTypes.DATE,
    },
    createdByTest: {
      type: DataTypes.BOOLEAN,
      allowNull: false,
      defaultValue: false,
    },
  },
  {
    tableName: "CommentVotes",
    freezeTableName: true, // no alter
    sequelize: db,
  }
);

export default CommentVote;
