/* eslint-disable class-methods-use-this */
import bcrypt from "bcrypt";
import { DataTypes, Model } from "sequelize";
import db from "../../db/db";

export interface FollowAttributesInterface {
  userId: number;
  followingUserId: number;
  followingUserName: string;
  // below are automatically generated by the db
  createdByTest: boolean;
  id?: number;
  createdAt?: Date;
  updatedAt?: Date;
}

class Follow extends Model<FollowAttributesInterface> {
  constructor(init?: Partial<Follow>) {
    super();
    Object.assign(this, init);
  }
}

Follow.init(
  {
    id: {
      type: DataTypes.INTEGER,
      allowNull: false,
      primaryKey: true,
      autoIncrement: true,
    },
    userId: {
      type: DataTypes.INTEGER,
      allowNull: false,
    },
    followingUserId: {
      type: DataTypes.INTEGER,
      allowNull: false,
    },
    followingUserName: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    createdAt: {
      type: DataTypes.DATE,
    },
    updatedAt: {
      type: DataTypes.DATE,
    },
    createdByTest: {
      type: DataTypes.BOOLEAN,
      allowNull: false,
      defaultValue: false,
    },
  },
  {
    tableName: "Follows",
    freezeTableName: true, // no alter
    sequelize: db,
  }
);

export default Follow;
